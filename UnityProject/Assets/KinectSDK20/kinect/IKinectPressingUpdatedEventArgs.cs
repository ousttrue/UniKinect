// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IKinectPressingUpdatedEventArgs: IUnknown
    {
        static Guid s_uuid = new Guid("d7d93d29-228e-4ebd-a3b9-e1b916b9baef");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int get_Position(
            out _PointF value
        ){
            var fp = GetFunctionPointer(3);
            if(m_get_PositionFunc==null) m_get_PositionFunc = (get_PositionFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_PositionFunc));
            
            return m_get_PositionFunc(m_ptr, out value);
        }
        delegate int get_PositionFunc(IntPtr self, out _PointF value);
        get_PositionFunc m_get_PositionFunc;

        public virtual int get_PressExtent(
            out float value
        ){
            var fp = GetFunctionPointer(4);
            if(m_get_PressExtentFunc==null) m_get_PressExtentFunc = (get_PressExtentFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_PressExtentFunc));
            
            return m_get_PressExtentFunc(m_ptr, out value);
        }
        delegate int get_PressExtentFunc(IntPtr self, out float value);
        get_PressExtentFunc m_get_PressExtentFunc;

        public virtual int get_HoldProgress(
            out float value
        ){
            var fp = GetFunctionPointer(5);
            if(m_get_HoldProgressFunc==null) m_get_HoldProgressFunc = (get_HoldProgressFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_HoldProgressFunc));
            
            return m_get_HoldProgressFunc(m_ptr, out value);
        }
        delegate int get_HoldProgressFunc(IntPtr self, out float value);
        get_HoldProgressFunc m_get_HoldProgressFunc;

    }
}
