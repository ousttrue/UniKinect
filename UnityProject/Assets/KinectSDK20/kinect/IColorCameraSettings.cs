// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IColorCameraSettings: IUnknown
    {
        static Guid s_uuid = new Guid("dbf802ab-0adf-485a-a844-cf1c7956d039");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int get_ExposureTime(
            out long exposureTime
        ){
            var fp = GetFunctionPointer(3);
            if(m_get_ExposureTimeFunc==null) m_get_ExposureTimeFunc = (get_ExposureTimeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_ExposureTimeFunc));
            
            return m_get_ExposureTimeFunc(m_ptr, out exposureTime);
        }
        delegate int get_ExposureTimeFunc(IntPtr self, out long exposureTime);
        get_ExposureTimeFunc m_get_ExposureTimeFunc;

        public virtual int get_FrameInterval(
            out long frameInterval
        ){
            var fp = GetFunctionPointer(4);
            if(m_get_FrameIntervalFunc==null) m_get_FrameIntervalFunc = (get_FrameIntervalFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_FrameIntervalFunc));
            
            return m_get_FrameIntervalFunc(m_ptr, out frameInterval);
        }
        delegate int get_FrameIntervalFunc(IntPtr self, out long frameInterval);
        get_FrameIntervalFunc m_get_FrameIntervalFunc;

        public virtual int get_Gain(
            out float gain
        ){
            var fp = GetFunctionPointer(5);
            if(m_get_GainFunc==null) m_get_GainFunc = (get_GainFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_GainFunc));
            
            return m_get_GainFunc(m_ptr, out gain);
        }
        delegate int get_GainFunc(IntPtr self, out float gain);
        get_GainFunc m_get_GainFunc;

        public virtual int get_Gamma(
            out float gamma
        ){
            var fp = GetFunctionPointer(6);
            if(m_get_GammaFunc==null) m_get_GammaFunc = (get_GammaFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_GammaFunc));
            
            return m_get_GammaFunc(m_ptr, out gamma);
        }
        delegate int get_GammaFunc(IntPtr self, out float gamma);
        get_GammaFunc m_get_GammaFunc;

    }
}
