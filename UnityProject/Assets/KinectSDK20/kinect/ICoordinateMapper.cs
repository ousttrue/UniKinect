// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class ICoordinateMapper: IUnknown
    {
        static Guid s_uuid = new Guid("8784df2d-16b0-481c-a11e-55e70bf25018");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int SubscribeCoordinateMappingChanged(
            out long waitableHandle
        ){
            var fp = GetFunctionPointer(3);
            if(m_SubscribeCoordinateMappingChangedFunc==null) m_SubscribeCoordinateMappingChangedFunc = (SubscribeCoordinateMappingChangedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SubscribeCoordinateMappingChangedFunc));
            
            return m_SubscribeCoordinateMappingChangedFunc(m_ptr, out waitableHandle);
        }
        delegate int SubscribeCoordinateMappingChangedFunc(IntPtr self, out long waitableHandle);
        SubscribeCoordinateMappingChangedFunc m_SubscribeCoordinateMappingChangedFunc;

        public virtual int UnsubscribeCoordinateMappingChanged(
            long waitableHandle
        ){
            var fp = GetFunctionPointer(4);
            if(m_UnsubscribeCoordinateMappingChangedFunc==null) m_UnsubscribeCoordinateMappingChangedFunc = (UnsubscribeCoordinateMappingChangedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnsubscribeCoordinateMappingChangedFunc));
            
            return m_UnsubscribeCoordinateMappingChangedFunc(m_ptr, waitableHandle);
        }
        delegate int UnsubscribeCoordinateMappingChangedFunc(IntPtr self, long waitableHandle);
        UnsubscribeCoordinateMappingChangedFunc m_UnsubscribeCoordinateMappingChangedFunc;

        public virtual int GetCoordinateMappingChangedEventData(
            long waitableHandle,
            out ICoordinateMappingChangedEventArgs eventData
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetCoordinateMappingChangedEventDataFunc==null) m_GetCoordinateMappingChangedEventDataFunc = (GetCoordinateMappingChangedEventDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetCoordinateMappingChangedEventDataFunc));
            eventData = new ICoordinateMappingChangedEventArgs();
            return m_GetCoordinateMappingChangedEventDataFunc(m_ptr, waitableHandle, out eventData.PtrForNew);
        }
        delegate int GetCoordinateMappingChangedEventDataFunc(IntPtr self, long waitableHandle, out IntPtr eventData);
        GetCoordinateMappingChangedEventDataFunc m_GetCoordinateMappingChangedEventDataFunc;

        public virtual int MapCameraPointToDepthSpace(
            _CameraSpacePoint cameraPoint,
            out _DepthSpacePoint depthPoint
        ){
            var fp = GetFunctionPointer(6);
            if(m_MapCameraPointToDepthSpaceFunc==null) m_MapCameraPointToDepthSpaceFunc = (MapCameraPointToDepthSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapCameraPointToDepthSpaceFunc));
            
            return m_MapCameraPointToDepthSpaceFunc(m_ptr, cameraPoint, out depthPoint);
        }
        delegate int MapCameraPointToDepthSpaceFunc(IntPtr self, _CameraSpacePoint cameraPoint, out _DepthSpacePoint depthPoint);
        MapCameraPointToDepthSpaceFunc m_MapCameraPointToDepthSpaceFunc;

        public virtual int MapCameraPointToColorSpace(
            _CameraSpacePoint cameraPoint,
            out _ColorSpacePoint colorPoint
        ){
            var fp = GetFunctionPointer(7);
            if(m_MapCameraPointToColorSpaceFunc==null) m_MapCameraPointToColorSpaceFunc = (MapCameraPointToColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapCameraPointToColorSpaceFunc));
            
            return m_MapCameraPointToColorSpaceFunc(m_ptr, cameraPoint, out colorPoint);
        }
        delegate int MapCameraPointToColorSpaceFunc(IntPtr self, _CameraSpacePoint cameraPoint, out _ColorSpacePoint colorPoint);
        MapCameraPointToColorSpaceFunc m_MapCameraPointToColorSpaceFunc;

        public virtual int MapDepthPointToCameraSpace(
            _DepthSpacePoint depthPoint,
            ushort depth,
            out _CameraSpacePoint cameraPoint
        ){
            var fp = GetFunctionPointer(8);
            if(m_MapDepthPointToCameraSpaceFunc==null) m_MapDepthPointToCameraSpaceFunc = (MapDepthPointToCameraSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapDepthPointToCameraSpaceFunc));
            
            return m_MapDepthPointToCameraSpaceFunc(m_ptr, depthPoint, depth, out cameraPoint);
        }
        delegate int MapDepthPointToCameraSpaceFunc(IntPtr self, _DepthSpacePoint depthPoint, ushort depth, out _CameraSpacePoint cameraPoint);
        MapDepthPointToCameraSpaceFunc m_MapDepthPointToCameraSpaceFunc;

        public virtual int MapDepthPointToColorSpace(
            _DepthSpacePoint depthPoint,
            ushort depth,
            out _ColorSpacePoint colorPoint
        ){
            var fp = GetFunctionPointer(9);
            if(m_MapDepthPointToColorSpaceFunc==null) m_MapDepthPointToColorSpaceFunc = (MapDepthPointToColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapDepthPointToColorSpaceFunc));
            
            return m_MapDepthPointToColorSpaceFunc(m_ptr, depthPoint, depth, out colorPoint);
        }
        delegate int MapDepthPointToColorSpaceFunc(IntPtr self, _DepthSpacePoint depthPoint, ushort depth, out _ColorSpacePoint colorPoint);
        MapDepthPointToColorSpaceFunc m_MapDepthPointToColorSpaceFunc;

        public virtual int MapCameraPointsToDepthSpace(
            uint cameraPointCount,
            ref _CameraSpacePoint cameraPoints,
            uint depthPointCount,
            out _DepthSpacePoint depthPoints
        ){
            var fp = GetFunctionPointer(10);
            if(m_MapCameraPointsToDepthSpaceFunc==null) m_MapCameraPointsToDepthSpaceFunc = (MapCameraPointsToDepthSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapCameraPointsToDepthSpaceFunc));
            
            return m_MapCameraPointsToDepthSpaceFunc(m_ptr, cameraPointCount, ref cameraPoints, depthPointCount, out depthPoints);
        }
        delegate int MapCameraPointsToDepthSpaceFunc(IntPtr self, uint cameraPointCount, ref _CameraSpacePoint cameraPoints, uint depthPointCount, out _DepthSpacePoint depthPoints);
        MapCameraPointsToDepthSpaceFunc m_MapCameraPointsToDepthSpaceFunc;

        public virtual int MapCameraPointsToColorSpace(
            uint cameraPointCount,
            ref _CameraSpacePoint cameraPoints,
            uint colorPointCount,
            out _ColorSpacePoint colorPoints
        ){
            var fp = GetFunctionPointer(11);
            if(m_MapCameraPointsToColorSpaceFunc==null) m_MapCameraPointsToColorSpaceFunc = (MapCameraPointsToColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapCameraPointsToColorSpaceFunc));
            
            return m_MapCameraPointsToColorSpaceFunc(m_ptr, cameraPointCount, ref cameraPoints, colorPointCount, out colorPoints);
        }
        delegate int MapCameraPointsToColorSpaceFunc(IntPtr self, uint cameraPointCount, ref _CameraSpacePoint cameraPoints, uint colorPointCount, out _ColorSpacePoint colorPoints);
        MapCameraPointsToColorSpaceFunc m_MapCameraPointsToColorSpaceFunc;

        public virtual int MapDepthPointsToCameraSpace(
            uint depthPointCount,
            ref _DepthSpacePoint depthPoints,
            uint depthCount,
            ref ushort depths,
            uint cameraPointCount,
            out _CameraSpacePoint cameraPoints
        ){
            var fp = GetFunctionPointer(12);
            if(m_MapDepthPointsToCameraSpaceFunc==null) m_MapDepthPointsToCameraSpaceFunc = (MapDepthPointsToCameraSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapDepthPointsToCameraSpaceFunc));
            
            return m_MapDepthPointsToCameraSpaceFunc(m_ptr, depthPointCount, ref depthPoints, depthCount, ref depths, cameraPointCount, out cameraPoints);
        }
        delegate int MapDepthPointsToCameraSpaceFunc(IntPtr self, uint depthPointCount, ref _DepthSpacePoint depthPoints, uint depthCount, ref ushort depths, uint cameraPointCount, out _CameraSpacePoint cameraPoints);
        MapDepthPointsToCameraSpaceFunc m_MapDepthPointsToCameraSpaceFunc;

        public virtual int MapDepthPointsToColorSpace(
            uint depthPointCount,
            ref _DepthSpacePoint depthPoints,
            uint depthCount,
            ref ushort depths,
            uint colorPointCount,
            out _ColorSpacePoint colorPoints
        ){
            var fp = GetFunctionPointer(13);
            if(m_MapDepthPointsToColorSpaceFunc==null) m_MapDepthPointsToColorSpaceFunc = (MapDepthPointsToColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapDepthPointsToColorSpaceFunc));
            
            return m_MapDepthPointsToColorSpaceFunc(m_ptr, depthPointCount, ref depthPoints, depthCount, ref depths, colorPointCount, out colorPoints);
        }
        delegate int MapDepthPointsToColorSpaceFunc(IntPtr self, uint depthPointCount, ref _DepthSpacePoint depthPoints, uint depthCount, ref ushort depths, uint colorPointCount, out _ColorSpacePoint colorPoints);
        MapDepthPointsToColorSpaceFunc m_MapDepthPointsToColorSpaceFunc;

        public virtual int MapDepthFrameToCameraSpace(
            uint depthPointCount,
            ref ushort depthFrameData,
            uint cameraPointCount,
            out _CameraSpacePoint cameraSpacePoints
        ){
            var fp = GetFunctionPointer(14);
            if(m_MapDepthFrameToCameraSpaceFunc==null) m_MapDepthFrameToCameraSpaceFunc = (MapDepthFrameToCameraSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapDepthFrameToCameraSpaceFunc));
            
            return m_MapDepthFrameToCameraSpaceFunc(m_ptr, depthPointCount, ref depthFrameData, cameraPointCount, out cameraSpacePoints);
        }
        delegate int MapDepthFrameToCameraSpaceFunc(IntPtr self, uint depthPointCount, ref ushort depthFrameData, uint cameraPointCount, out _CameraSpacePoint cameraSpacePoints);
        MapDepthFrameToCameraSpaceFunc m_MapDepthFrameToCameraSpaceFunc;

        public virtual int MapDepthFrameToColorSpace(
            uint depthPointCount,
            ref ushort depthFrameData,
            uint colorPointCount,
            out _ColorSpacePoint colorSpacePoints
        ){
            var fp = GetFunctionPointer(15);
            if(m_MapDepthFrameToColorSpaceFunc==null) m_MapDepthFrameToColorSpaceFunc = (MapDepthFrameToColorSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapDepthFrameToColorSpaceFunc));
            
            return m_MapDepthFrameToColorSpaceFunc(m_ptr, depthPointCount, ref depthFrameData, colorPointCount, out colorSpacePoints);
        }
        delegate int MapDepthFrameToColorSpaceFunc(IntPtr self, uint depthPointCount, ref ushort depthFrameData, uint colorPointCount, out _ColorSpacePoint colorSpacePoints);
        MapDepthFrameToColorSpaceFunc m_MapDepthFrameToColorSpaceFunc;

        public virtual int MapColorFrameToDepthSpace(
            uint depthDataPointCount,
            ref ushort depthFrameData,
            uint depthPointCount,
            out _DepthSpacePoint depthSpacePoints
        ){
            var fp = GetFunctionPointer(16);
            if(m_MapColorFrameToDepthSpaceFunc==null) m_MapColorFrameToDepthSpaceFunc = (MapColorFrameToDepthSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapColorFrameToDepthSpaceFunc));
            
            return m_MapColorFrameToDepthSpaceFunc(m_ptr, depthDataPointCount, ref depthFrameData, depthPointCount, out depthSpacePoints);
        }
        delegate int MapColorFrameToDepthSpaceFunc(IntPtr self, uint depthDataPointCount, ref ushort depthFrameData, uint depthPointCount, out _DepthSpacePoint depthSpacePoints);
        MapColorFrameToDepthSpaceFunc m_MapColorFrameToDepthSpaceFunc;

        public virtual int MapColorFrameToCameraSpace(
            uint depthDataPointCount,
            ref ushort depthFrameData,
            uint cameraPointCount,
            out _CameraSpacePoint cameraSpacePoints
        ){
            var fp = GetFunctionPointer(17);
            if(m_MapColorFrameToCameraSpaceFunc==null) m_MapColorFrameToCameraSpaceFunc = (MapColorFrameToCameraSpaceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(MapColorFrameToCameraSpaceFunc));
            
            return m_MapColorFrameToCameraSpaceFunc(m_ptr, depthDataPointCount, ref depthFrameData, cameraPointCount, out cameraSpacePoints);
        }
        delegate int MapColorFrameToCameraSpaceFunc(IntPtr self, uint depthDataPointCount, ref ushort depthFrameData, uint cameraPointCount, out _CameraSpacePoint cameraSpacePoints);
        MapColorFrameToCameraSpaceFunc m_MapColorFrameToCameraSpaceFunc;

        public virtual int GetDepthFrameToCameraSpaceTable(
            out uint tableEntryCount,
            out IntPtr tableEntries
        ){
            var fp = GetFunctionPointer(18);
            if(m_GetDepthFrameToCameraSpaceTableFunc==null) m_GetDepthFrameToCameraSpaceTableFunc = (GetDepthFrameToCameraSpaceTableFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDepthFrameToCameraSpaceTableFunc));
            
            return m_GetDepthFrameToCameraSpaceTableFunc(m_ptr, out tableEntryCount, out tableEntries);
        }
        delegate int GetDepthFrameToCameraSpaceTableFunc(IntPtr self, out uint tableEntryCount, out IntPtr tableEntries);
        GetDepthFrameToCameraSpaceTableFunc m_GetDepthFrameToCameraSpaceTableFunc;

        public virtual int GetDepthCameraIntrinsics(
            out _CameraIntrinsics cameraIntrinsics
        ){
            var fp = GetFunctionPointer(19);
            if(m_GetDepthCameraIntrinsicsFunc==null) m_GetDepthCameraIntrinsicsFunc = (GetDepthCameraIntrinsicsFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetDepthCameraIntrinsicsFunc));
            
            return m_GetDepthCameraIntrinsicsFunc(m_ptr, out cameraIntrinsics);
        }
        delegate int GetDepthCameraIntrinsicsFunc(IntPtr self, out _CameraIntrinsics cameraIntrinsics);
        GetDepthCameraIntrinsicsFunc m_GetDepthCameraIntrinsicsFunc;

    }
}
