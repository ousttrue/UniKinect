// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IAudioBeamList: IUnknown
    {
        static Guid s_uuid = new Guid("3c792c7b-7d95-4c56-9dc7-ef63955781ea");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int get_BeamCount(
            out uint count
        ){
            var fp = GetFunctionPointer(3);
            if(m_get_BeamCountFunc==null) m_get_BeamCountFunc = (get_BeamCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_BeamCountFunc));
            
            return m_get_BeamCountFunc(m_ptr, out count);
        }
        delegate int get_BeamCountFunc(IntPtr self, out uint count);
        get_BeamCountFunc m_get_BeamCountFunc;

        public virtual int OpenAudioBeam(
            uint index,
            out IAudioBeam audioBeam
        ){
            var fp = GetFunctionPointer(4);
            if(m_OpenAudioBeamFunc==null) m_OpenAudioBeamFunc = (OpenAudioBeamFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OpenAudioBeamFunc));
            audioBeam = new IAudioBeam();
            return m_OpenAudioBeamFunc(m_ptr, index, out audioBeam.PtrForNew);
        }
        delegate int OpenAudioBeamFunc(IntPtr self, uint index, out IntPtr audioBeam);
        OpenAudioBeamFunc m_OpenAudioBeamFunc;

    }
}
