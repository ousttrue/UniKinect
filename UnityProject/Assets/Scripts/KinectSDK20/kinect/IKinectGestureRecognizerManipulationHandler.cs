// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IKinectGestureRecognizerManipulationHandler: IUnknown
    {
        static Guid s_uuid = new Guid("398cf7e0-4fd4-4336-baaa-b6708b4c437b");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int OnManipulationStarted(
            IKinectManipulationStartedEventArgs args
        ){
            var fp = GetFunctionPointer(3);
            if(m_OnManipulationStartedFunc==null) m_OnManipulationStartedFunc = (OnManipulationStartedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnManipulationStartedFunc));
            
            return m_OnManipulationStartedFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnManipulationStartedFunc(IntPtr self, IntPtr args);
        OnManipulationStartedFunc m_OnManipulationStartedFunc;

        public virtual int OnManipulationUpdated(
            IKinectManipulationUpdatedEventArgs args
        ){
            var fp = GetFunctionPointer(4);
            if(m_OnManipulationUpdatedFunc==null) m_OnManipulationUpdatedFunc = (OnManipulationUpdatedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnManipulationUpdatedFunc));
            
            return m_OnManipulationUpdatedFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnManipulationUpdatedFunc(IntPtr self, IntPtr args);
        OnManipulationUpdatedFunc m_OnManipulationUpdatedFunc;

        public virtual int OnManipulationInertiaStarting(
            IKinectManipulationInertiaStartingEventArgs args
        ){
            var fp = GetFunctionPointer(5);
            if(m_OnManipulationInertiaStartingFunc==null) m_OnManipulationInertiaStartingFunc = (OnManipulationInertiaStartingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnManipulationInertiaStartingFunc));
            
            return m_OnManipulationInertiaStartingFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnManipulationInertiaStartingFunc(IntPtr self, IntPtr args);
        OnManipulationInertiaStartingFunc m_OnManipulationInertiaStartingFunc;

        public virtual int OnManipulationCompleted(
            IKinectManipulationCompletedEventArgs args
        ){
            var fp = GetFunctionPointer(6);
            if(m_OnManipulationCompletedFunc==null) m_OnManipulationCompletedFunc = (OnManipulationCompletedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnManipulationCompletedFunc));
            
            return m_OnManipulationCompletedFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnManipulationCompletedFunc(IntPtr self, IntPtr args);
        OnManipulationCompletedFunc m_OnManipulationCompletedFunc;

    }
}
