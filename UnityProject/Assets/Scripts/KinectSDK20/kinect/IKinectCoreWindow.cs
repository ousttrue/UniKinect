// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IKinectCoreWindow: IUnknown
    {
        static Guid s_uuid = new Guid("6b5ddac2-1c7a-4962-937b-a7a527149c64");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int SubscribePointerEntered(
            out long waitableHandle
        ){
            var fp = GetFunctionPointer(3);
            if(m_SubscribePointerEnteredFunc==null) m_SubscribePointerEnteredFunc = (SubscribePointerEnteredFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SubscribePointerEnteredFunc));
            
            return m_SubscribePointerEnteredFunc(m_ptr, out waitableHandle);
        }
        delegate int SubscribePointerEnteredFunc(IntPtr self, out long waitableHandle);
        SubscribePointerEnteredFunc m_SubscribePointerEnteredFunc;

        public virtual int UnsubscribePointerEntered(
            long waitableHandle
        ){
            var fp = GetFunctionPointer(4);
            if(m_UnsubscribePointerEnteredFunc==null) m_UnsubscribePointerEnteredFunc = (UnsubscribePointerEnteredFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnsubscribePointerEnteredFunc));
            
            return m_UnsubscribePointerEnteredFunc(m_ptr, waitableHandle);
        }
        delegate int UnsubscribePointerEnteredFunc(IntPtr self, long waitableHandle);
        UnsubscribePointerEnteredFunc m_UnsubscribePointerEnteredFunc;

        public virtual int GetPointerEnteredEventData(
            long waitableHandle,
            out IKinectPointerEventArgs eventData
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetPointerEnteredEventDataFunc==null) m_GetPointerEnteredEventDataFunc = (GetPointerEnteredEventDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPointerEnteredEventDataFunc));
            eventData = new IKinectPointerEventArgs();
            return m_GetPointerEnteredEventDataFunc(m_ptr, waitableHandle, out eventData.PtrForNew);
        }
        delegate int GetPointerEnteredEventDataFunc(IntPtr self, long waitableHandle, out IntPtr eventData);
        GetPointerEnteredEventDataFunc m_GetPointerEnteredEventDataFunc;

        public virtual int SubscribePointerMoved(
            out long waitableHandle
        ){
            var fp = GetFunctionPointer(6);
            if(m_SubscribePointerMovedFunc==null) m_SubscribePointerMovedFunc = (SubscribePointerMovedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SubscribePointerMovedFunc));
            
            return m_SubscribePointerMovedFunc(m_ptr, out waitableHandle);
        }
        delegate int SubscribePointerMovedFunc(IntPtr self, out long waitableHandle);
        SubscribePointerMovedFunc m_SubscribePointerMovedFunc;

        public virtual int UnsubscribePointerMoved(
            long waitableHandle
        ){
            var fp = GetFunctionPointer(7);
            if(m_UnsubscribePointerMovedFunc==null) m_UnsubscribePointerMovedFunc = (UnsubscribePointerMovedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnsubscribePointerMovedFunc));
            
            return m_UnsubscribePointerMovedFunc(m_ptr, waitableHandle);
        }
        delegate int UnsubscribePointerMovedFunc(IntPtr self, long waitableHandle);
        UnsubscribePointerMovedFunc m_UnsubscribePointerMovedFunc;

        public virtual int GetPointerMovedEventData(
            long waitableHandle,
            out IKinectPointerEventArgs eventData
        ){
            var fp = GetFunctionPointer(8);
            if(m_GetPointerMovedEventDataFunc==null) m_GetPointerMovedEventDataFunc = (GetPointerMovedEventDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPointerMovedEventDataFunc));
            eventData = new IKinectPointerEventArgs();
            return m_GetPointerMovedEventDataFunc(m_ptr, waitableHandle, out eventData.PtrForNew);
        }
        delegate int GetPointerMovedEventDataFunc(IntPtr self, long waitableHandle, out IntPtr eventData);
        GetPointerMovedEventDataFunc m_GetPointerMovedEventDataFunc;

        public virtual int SubscribePointerExited(
            out long waitableHandle
        ){
            var fp = GetFunctionPointer(9);
            if(m_SubscribePointerExitedFunc==null) m_SubscribePointerExitedFunc = (SubscribePointerExitedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SubscribePointerExitedFunc));
            
            return m_SubscribePointerExitedFunc(m_ptr, out waitableHandle);
        }
        delegate int SubscribePointerExitedFunc(IntPtr self, out long waitableHandle);
        SubscribePointerExitedFunc m_SubscribePointerExitedFunc;

        public virtual int UnsubscribePointerExited(
            long waitableHandle
        ){
            var fp = GetFunctionPointer(10);
            if(m_UnsubscribePointerExitedFunc==null) m_UnsubscribePointerExitedFunc = (UnsubscribePointerExitedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnsubscribePointerExitedFunc));
            
            return m_UnsubscribePointerExitedFunc(m_ptr, waitableHandle);
        }
        delegate int UnsubscribePointerExitedFunc(IntPtr self, long waitableHandle);
        UnsubscribePointerExitedFunc m_UnsubscribePointerExitedFunc;

        public virtual int GetPointerExitedEventData(
            long waitableHandle,
            out IKinectPointerEventArgs eventData
        ){
            var fp = GetFunctionPointer(11);
            if(m_GetPointerExitedEventDataFunc==null) m_GetPointerExitedEventDataFunc = (GetPointerExitedEventDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetPointerExitedEventDataFunc));
            eventData = new IKinectPointerEventArgs();
            return m_GetPointerExitedEventDataFunc(m_ptr, waitableHandle, out eventData.PtrForNew);
        }
        delegate int GetPointerExitedEventDataFunc(IntPtr self, long waitableHandle, out IntPtr eventData);
        GetPointerExitedEventDataFunc m_GetPointerExitedEventDataFunc;

    }
}
