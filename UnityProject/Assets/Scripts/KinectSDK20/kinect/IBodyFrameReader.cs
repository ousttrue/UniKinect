// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IBodyFrameReader: IUnknown
    {
        static Guid s_uuid = new Guid("45532df5-a63c-418f-a39f-c567936bc051");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int SubscribeFrameArrived(
            out long waitableHandle
        ){
            var fp = GetFunctionPointer(3);
            if(m_SubscribeFrameArrivedFunc==null) m_SubscribeFrameArrivedFunc = (SubscribeFrameArrivedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(SubscribeFrameArrivedFunc));
            
            return m_SubscribeFrameArrivedFunc(m_ptr, out waitableHandle);
        }
        delegate int SubscribeFrameArrivedFunc(IntPtr self, out long waitableHandle);
        SubscribeFrameArrivedFunc m_SubscribeFrameArrivedFunc;

        public virtual int UnsubscribeFrameArrived(
            long waitableHandle
        ){
            var fp = GetFunctionPointer(4);
            if(m_UnsubscribeFrameArrivedFunc==null) m_UnsubscribeFrameArrivedFunc = (UnsubscribeFrameArrivedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(UnsubscribeFrameArrivedFunc));
            
            return m_UnsubscribeFrameArrivedFunc(m_ptr, waitableHandle);
        }
        delegate int UnsubscribeFrameArrivedFunc(IntPtr self, long waitableHandle);
        UnsubscribeFrameArrivedFunc m_UnsubscribeFrameArrivedFunc;

        public virtual int GetFrameArrivedEventData(
            long waitableHandle,
            out IBodyFrameArrivedEventArgs eventData
        ){
            var fp = GetFunctionPointer(5);
            if(m_GetFrameArrivedEventDataFunc==null) m_GetFrameArrivedEventDataFunc = (GetFrameArrivedEventDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetFrameArrivedEventDataFunc));
            eventData = new IBodyFrameArrivedEventArgs();
            return m_GetFrameArrivedEventDataFunc(m_ptr, waitableHandle, out eventData.PtrForNew);
        }
        delegate int GetFrameArrivedEventDataFunc(IntPtr self, long waitableHandle, out IntPtr eventData);
        GetFrameArrivedEventDataFunc m_GetFrameArrivedEventDataFunc;

        public virtual int AcquireLatestFrame(
            out IBodyFrame bodyFrame
        ){
            var fp = GetFunctionPointer(6);
            if(m_AcquireLatestFrameFunc==null) m_AcquireLatestFrameFunc = (AcquireLatestFrameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(AcquireLatestFrameFunc));
            bodyFrame = new IBodyFrame();
            return m_AcquireLatestFrameFunc(m_ptr, out bodyFrame.PtrForNew);
        }
        delegate int AcquireLatestFrameFunc(IntPtr self, out IntPtr bodyFrame);
        AcquireLatestFrameFunc m_AcquireLatestFrameFunc;

        public virtual int get_IsPaused(
            out byte isPaused
        ){
            var fp = GetFunctionPointer(7);
            if(m_get_IsPausedFunc==null) m_get_IsPausedFunc = (get_IsPausedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_IsPausedFunc));
            
            return m_get_IsPausedFunc(m_ptr, out isPaused);
        }
        delegate int get_IsPausedFunc(IntPtr self, out byte isPaused);
        get_IsPausedFunc m_get_IsPausedFunc;

        public virtual int put_IsPaused(
            byte isPaused
        ){
            var fp = GetFunctionPointer(8);
            if(m_put_IsPausedFunc==null) m_put_IsPausedFunc = (put_IsPausedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(put_IsPausedFunc));
            
            return m_put_IsPausedFunc(m_ptr, isPaused);
        }
        delegate int put_IsPausedFunc(IntPtr self, byte isPaused);
        put_IsPausedFunc m_put_IsPausedFunc;

        public virtual int get_BodyFrameSource(
            out IBodyFrameSource bodyFrameSource
        ){
            var fp = GetFunctionPointer(9);
            if(m_get_BodyFrameSourceFunc==null) m_get_BodyFrameSourceFunc = (get_BodyFrameSourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_BodyFrameSourceFunc));
            bodyFrameSource = new IBodyFrameSource();
            return m_get_BodyFrameSourceFunc(m_ptr, out bodyFrameSource.PtrForNew);
        }
        delegate int get_BodyFrameSourceFunc(IntPtr self, out IntPtr bodyFrameSource);
        get_BodyFrameSourceFunc m_get_BodyFrameSourceFunc;

    }
}
