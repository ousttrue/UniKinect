// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IKinectGestureRecognizerSelectionHandler: IUnknown
    {
        static Guid s_uuid = new Guid("9f3d5c22-158f-4a4e-ad4e-023fae1f4bc9");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int OnTapped(
            IKinectTappedEventArgs args
        ){
            var fp = GetFunctionPointer(3);
            if(m_OnTappedFunc==null) m_OnTappedFunc = (OnTappedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnTappedFunc));
            
            return m_OnTappedFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnTappedFunc(IntPtr self, IntPtr args);
        OnTappedFunc m_OnTappedFunc;

        public virtual int OnHolding(
            IKinectHoldingEventArgs args
        ){
            var fp = GetFunctionPointer(4);
            if(m_OnHoldingFunc==null) m_OnHoldingFunc = (OnHoldingFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnHoldingFunc));
            
            return m_OnHoldingFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnHoldingFunc(IntPtr self, IntPtr args);
        OnHoldingFunc m_OnHoldingFunc;

        public virtual int OnPressingStarted(
            IKinectPressingStartedEventArgs args
        ){
            var fp = GetFunctionPointer(5);
            if(m_OnPressingStartedFunc==null) m_OnPressingStartedFunc = (OnPressingStartedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnPressingStartedFunc));
            
            return m_OnPressingStartedFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnPressingStartedFunc(IntPtr self, IntPtr args);
        OnPressingStartedFunc m_OnPressingStartedFunc;

        public virtual int OnPressingUpdated(
            IKinectPressingUpdatedEventArgs args
        ){
            var fp = GetFunctionPointer(6);
            if(m_OnPressingUpdatedFunc==null) m_OnPressingUpdatedFunc = (OnPressingUpdatedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnPressingUpdatedFunc));
            
            return m_OnPressingUpdatedFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnPressingUpdatedFunc(IntPtr self, IntPtr args);
        OnPressingUpdatedFunc m_OnPressingUpdatedFunc;

        public virtual int OnPressingCompleted(
            IKinectPressingCompletedEventArgs args
        ){
            var fp = GetFunctionPointer(7);
            if(m_OnPressingCompletedFunc==null) m_OnPressingCompletedFunc = (OnPressingCompletedFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OnPressingCompletedFunc));
            
            return m_OnPressingCompletedFunc(m_ptr, args!=null ? args.Ptr : IntPtr.Zero);
        }
        delegate int OnPressingCompletedFunc(IntPtr self, IntPtr args);
        OnPressingCompletedFunc m_OnPressingCompletedFunc;

    }
}
