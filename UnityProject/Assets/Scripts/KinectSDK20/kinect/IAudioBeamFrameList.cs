// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IAudioBeamFrameList: IUnknown
    {
        static Guid s_uuid = new Guid("5393c8b9-c044-49cb-bdd6-23dfffd7427e");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int get_BeamCount(
            out uint count
        ){
            var fp = GetFunctionPointer(3);
            if(m_get_BeamCountFunc==null) m_get_BeamCountFunc = (get_BeamCountFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_BeamCountFunc));
            
            return m_get_BeamCountFunc(m_ptr, out count);
        }
        delegate int get_BeamCountFunc(IntPtr self, out uint count);
        get_BeamCountFunc m_get_BeamCountFunc;

        public virtual int OpenAudioBeamFrame(
            uint index,
            out IAudioBeamFrame audioBeamFrame
        ){
            var fp = GetFunctionPointer(4);
            if(m_OpenAudioBeamFrameFunc==null) m_OpenAudioBeamFrameFunc = (OpenAudioBeamFrameFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(OpenAudioBeamFrameFunc));
            audioBeamFrame = new IAudioBeamFrame();
            return m_OpenAudioBeamFrameFunc(m_ptr, index, out audioBeamFrame.PtrForNew);
        }
        delegate int OpenAudioBeamFrameFunc(IntPtr self, uint index, out IntPtr audioBeamFrame);
        OpenAudioBeamFrameFunc m_OpenAudioBeamFrameFunc;

    }
}
