// This source code was generated by regenerator"
using System;
using System.Runtime.InteropServices;

namespace KinectSDK20 {
    public class IBodyFrame: IUnknown
    {
        static Guid s_uuid = new Guid("52884f1f-94d7-4b57-bf87-9226950980d5");
        public static new ref Guid IID =>ref s_uuid;
        public override ref Guid GetIID(){ return ref s_uuid; }
                
        public virtual int GetAndRefreshBodyData(
            uint capacity,
            out IBody bodies
        ){
            var fp = GetFunctionPointer(3);
            if(m_GetAndRefreshBodyDataFunc==null) m_GetAndRefreshBodyDataFunc = (GetAndRefreshBodyDataFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(GetAndRefreshBodyDataFunc));
            bodies = new IBody();
            return m_GetAndRefreshBodyDataFunc(m_ptr, capacity, out bodies.PtrForNew);
        }
        delegate int GetAndRefreshBodyDataFunc(IntPtr self, uint capacity, out IntPtr bodies);
        GetAndRefreshBodyDataFunc m_GetAndRefreshBodyDataFunc;

        public virtual int get_FloorClipPlane(
            out _Vector4 floorClipPlane
        ){
            var fp = GetFunctionPointer(4);
            if(m_get_FloorClipPlaneFunc==null) m_get_FloorClipPlaneFunc = (get_FloorClipPlaneFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_FloorClipPlaneFunc));
            
            return m_get_FloorClipPlaneFunc(m_ptr, out floorClipPlane);
        }
        delegate int get_FloorClipPlaneFunc(IntPtr self, out _Vector4 floorClipPlane);
        get_FloorClipPlaneFunc m_get_FloorClipPlaneFunc;

        public virtual int get_RelativeTime(
            out long relativeTime
        ){
            var fp = GetFunctionPointer(5);
            if(m_get_RelativeTimeFunc==null) m_get_RelativeTimeFunc = (get_RelativeTimeFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_RelativeTimeFunc));
            
            return m_get_RelativeTimeFunc(m_ptr, out relativeTime);
        }
        delegate int get_RelativeTimeFunc(IntPtr self, out long relativeTime);
        get_RelativeTimeFunc m_get_RelativeTimeFunc;

        public virtual int get_BodyFrameSource(
            out IBodyFrameSource bodyFrameSource
        ){
            var fp = GetFunctionPointer(6);
            if(m_get_BodyFrameSourceFunc==null) m_get_BodyFrameSourceFunc = (get_BodyFrameSourceFunc)Marshal.GetDelegateForFunctionPointer(fp, typeof(get_BodyFrameSourceFunc));
            bodyFrameSource = new IBodyFrameSource();
            return m_get_BodyFrameSourceFunc(m_ptr, out bodyFrameSource.PtrForNew);
        }
        delegate int get_BodyFrameSourceFunc(IntPtr self, out IntPtr bodyFrameSource);
        get_BodyFrameSourceFunc m_get_BodyFrameSourceFunc;

    }
}
